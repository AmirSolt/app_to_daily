generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider   = "postgresql"
    url        = env("DATABASE_URL")
    extensions = [postgis()]
}

model Profile {
    id               String         @id @default(uuid())
    createdAt        DateTime       @default(now())
    updatedAt        DateTime       @updatedAt
    zones            Zone[]
    zoneReports      ReportOnZone[]
    adClicks         AdClick[]
    crimeTypeFilters CrimeType[]
}

model Zone {
    id            Int                                  @id @default(autoincrement())
    label         String
    address       String
    radius        Float
    region        Region
    profile          Profile                                 @relation(fields: [profileId], references: [id])
    profileId        String
    reportOnZones ReportOnZone[]
    long          Float
    lat           Float
    point         Unsupported("geometry(Point, 3857)")

    @@index([point], map: "zone_idx", type: Gist)
}

model Report {
    id            String                                  @id
    createdAt        DateTime       @default(now())
    crimeType     CrimeType
    neighborhood String?
    locationType String?
    occurAt      DateTime
    region        Region
    reportOnZones ReportOnZone[]
    long          Float
    lat           Float
    point         Unsupported("geometry(Point, 3857)")

    @@index([point], map: "report_idx", type: Gist)
    @@index([createdAt], map: "created_at_idx")
    @@index([occurAt], map: "occur_at_idx")
}

model ReportOnZone {
    report   Report @relation(fields: [reportId], references: [id])
    reportId String
    zone     Zone   @relation(fields: [zoneId], references: [id])
    zoneId   Int
    profile     Profile   @relation(fields: [profileId], references: [id])
    profileId   String

    @@id([reportId, zoneId])
}

model AdContent {
    id         Int    @id @default(autoincrement())
    imgSrc     String?
    title      String?
    body       String?
    buttonText String?
    url        String
}

model AdClick {
    id          Int         @id @default(autoincrement())
    adComponent AdComponent
    profile        Profile        @relation(fields: [profileId], references: [id])
    profileId      String
}

enum Region {
    TORONTO
}

enum CrimeType {
    ASSAULT
    AUTO_THEFT
    THEFT_FROM_VEHICLE
    BREAK_AND_ENTER
    SEXUAL_VIOLATION
    ROBBERY
    THEFT_OVER
    BIKE_THEFT
    SHOOTING
    HOMICIDE
}

enum AdComponent {
    BANNER
}

